{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CMDHR2804/query-builder/app/api/send-for-approval/route.ts"],"sourcesContent":["// File: app/api/send-for-approval/route.ts\r\n\r\nimport { google } from 'googleapis';\r\nimport { NextResponse } from 'next/server';\r\nimport { Buffer } from 'buffer';\r\n\r\n// === Shared helper to decode Base64 JSON creds ===\r\nfunction loadServiceAccount() {\r\n  const b64 = process.env.GOOGLE_SERVICE_KEY_JSON_B64;\r\n  if (!b64) throw new Error('Missing env var GOOGLE_SERVICE_KEY_JSON_B64');\r\n  const raw = Buffer.from(b64, 'base64').toString('utf8');\r\n  const svc = JSON.parse(raw) as any;\r\n  svc.private_key = svc.private_key.replace(/\\\\n/g, '\\n');\r\n  return svc;\r\n}\r\n\r\nexport async function POST(req: Request) {\r\n  try {\r\n    const {\r\n      originalQuery,\r\n      prompt,\r\n      modifiedQuery,\r\n      submittedBy,\r\n      bank,\r\n      segment,\r\n    } = await req.json();\r\n\r\n    const spreadsheetId = '1GwTyj7g0pbqyvwBiWbUXHi_J1qboJ2rryXgCXtpnvLM';\r\n\r\n    // === Authenticate with Google using Base64 creds ===\r\n    const svc  = loadServiceAccount();\r\n    const auth = new google.auth.GoogleAuth({\r\n      credentials: svc,\r\n      scopes: ['https://www.googleapis.com/auth/spreadsheets'],\r\n    });\r\n    const sheets = google.sheets({ version: 'v4', auth });\r\n\r\n    // Build the new submission row\r\n    const values = [[\r\n      originalQuery,\r\n      prompt,\r\n      modifiedQuery,\r\n      'Pending',         // Status\r\n      submittedBy,       // SubmittedBy\r\n      '',                // ApprovedBy (blank until review)\r\n      new Date().toISOString(),\r\n      bank,\r\n      segment,\r\n    ]];\r\n\r\n    // Append into Submissions!A2:I\r\n    await sheets.spreadsheets.values.append({\r\n      spreadsheetId,\r\n      range: 'Submissions!A:I',\r\n      valueInputOption: 'USER_ENTERED',\r\n      requestBody: { values },\r\n    });\r\n\r\n    return NextResponse.json({ status: 'submitted' });\r\n  } catch (err: any) {\r\n    console.error('Error in send-for-approval API:', err);\r\n    return NextResponse.json(\r\n      { error: `Failed to submit: ${err.message}` },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,2CAA2C;;;;AAE3C;AACA;AACA;;;;AAEA,oDAAoD;AACpD,SAAS;IACP,MAAM,MAAM,QAAQ,GAAG,CAAC,2BAA2B;IACnD,IAAI,CAAC,KAAK,MAAM,IAAI,MAAM;IAC1B,MAAM,MAAM,qGAAA,CAAA,SAAM,CAAC,IAAI,CAAC,KAAK,UAAU,QAAQ,CAAC;IAChD,MAAM,MAAM,KAAK,KAAK,CAAC;IACvB,IAAI,WAAW,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,QAAQ;IAClD,OAAO;AACT;AAEO,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,EACJ,aAAa,EACb,MAAM,EACN,aAAa,EACb,WAAW,EACX,IAAI,EACJ,OAAO,EACR,GAAG,MAAM,IAAI,IAAI;QAElB,MAAM,gBAAgB;QAEtB,sDAAsD;QACtD,MAAM,MAAO;QACb,MAAM,OAAO,IAAI,qJAAA,CAAA,SAAM,CAAC,IAAI,CAAC,UAAU,CAAC;YACtC,aAAa;YACb,QAAQ;gBAAC;aAA+C;QAC1D;QACA,MAAM,SAAS,qJAAA,CAAA,SAAM,CAAC,MAAM,CAAC;YAAE,SAAS;YAAM;QAAK;QAEnD,+BAA+B;QAC/B,MAAM,SAAS;YAAC;gBACd;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA,IAAI,OAAO,WAAW;gBACtB;gBACA;aACD;SAAC;QAEF,+BAA+B;QAC/B,MAAM,OAAO,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC;YACtC;YACA,OAAO;YACP,kBAAkB;YAClB,aAAa;gBAAE;YAAO;QACxB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,QAAQ;QAAY;IACjD,EAAE,OAAO,KAAU;QACjB,QAAQ,KAAK,CAAC,mCAAmC;QACjD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO,CAAC,kBAAkB,EAAE,IAAI,OAAO,EAAE;QAAC,GAC5C;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}