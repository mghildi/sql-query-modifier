{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CMDHR2804/query-builder/app/submissions/page.tsx"],"sourcesContent":["import React from 'react'\r\nimport { headers } from 'next/headers'\r\n\r\n// Define the shape of a submission row\r\ninterface Submission {\r\n  rowIndex: number\r\n  OriginalQuery: string\r\n  Prompt: string\r\n  ModifiedQuery: string\r\n  Status: string\r\n  SubmittedBy: string\r\n  ApprovedBy: string\r\n  Timestamp: string\r\n  BankName: string\r\n  Segment: string\r\n}\r\n\r\n// Fetch submissions from the Sheets API using an absolute URL\r\nasync function getSubmissions(): Promise<Submission[]> {\r\n  const host = headers().get('host')!\r\n  const protocol = process.env.NODE_ENV === 'development' ? 'http' : 'https'\r\n  const url = `${protocol}://${host}/api/fetch-submissions`\r\n\r\n  const res = await fetch(url, { cache: 'no-store' })\r\n  if (!res.ok) throw new Error('Failed to load submissions')\r\n  return res.json()\r\n}\r\n\r\nexport default async function SubmissionsPage() {\r\n  const submissions = await getSubmissions()\r\n  const uniqueBanks = Array.from(new Set(submissions.map(s => s.BankName)))\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h1 className=\"text-2xl font-semibold mb-4\">Query Submissions</h1>\r\n      <div className=\"overflow-x-auto\">\r\n        <table className=\"min-w-full border-collapse\">\r\n          <thead>\r\n            <tr className=\"bg-gray-100\">\r\n              <th className=\"px-3 py-2 text-left text-sm font-medium\">#</th>\r\n              <th className=\"px-3 py-2 text-left text-sm font-medium\">Original</th>\r\n              <th className=\"px-3 py-2 text-left text-sm font-medium\">Prompt</th>\r\n              <th className=\"px-3 py-2 text-left text-sm font-medium\">Modified</th>\r\n              <th className=\"px-3 py-2 text-left text-sm font-medium\">Status</th>\r\n              <th className=\"px-3 py-2 text-left text-sm font-medium\">By</th>\r\n              <th className=\"px-3 py-2 text-left text-sm font-medium\">Approved By</th>\r\n              <th className=\"px-3 py-2 text-left text-sm font-medium\">When</th>\r\n              <th className=\"px-3 py-2 text-left text-sm font-medium\">Bank</th>\r\n              <th className=\"px-3 py-2 text-left text-sm font-medium\">Segment</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {submissions.map(s => (\r\n              <tr key={s.rowIndex} className=\"border-t first:border-t-0 last:border-b\">\r\n                <td className=\"px-3 py-2 align-top\">{s.rowIndex}</td>\r\n                <td className=\"px-3 py-2 align-top\">{s.OriginalQuery}</td>\r\n                <td className=\"px-3 py-2 align-top\">{s.Prompt || '-'}</td>\r\n                <td className=\"px-3 py-2 align-top\">\r\n                  <pre className=\"whitespace-pre-wrap m-0\">{s.ModifiedQuery}</pre>\r\n                </td>\r\n                <td className=\"px-3 py-2 align-top\">{s.Status}</td>\r\n                <td className=\"px-3 py-2 align-top\">{s.SubmittedBy}</td>\r\n                <td className=\"px-3 py-2 align-top\">{s.ApprovedBy || '-'}</td>\r\n                <td className=\"px-3 py-2 align-top\">{new Date(s.Timestamp).toLocaleString()}</td>\r\n                <td className=\"px-3 py-2 align-top\">\r\n                  <select defaultValue={s.BankName} className=\"border px-2 py-1 rounded\">\r\n                    {uniqueBanks.map(bank => (\r\n                      <option key={bank} value={bank}>{bank}</option>\r\n                    ))}\r\n                  </select>\r\n                </td>\r\n                <td className=\"px-3 py-2 align-top\">{s.Segment}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AACA;;;AAgBA,8DAA8D;AAC9D,eAAe;IACb,MAAM,OAAO,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD,IAAI,GAAG,CAAC;IAC3B,MAAM,WAAW,uCAAyC;IAC1D,MAAM,MAAM,GAAG,SAAS,GAAG,EAAE,KAAK,sBAAsB,CAAC;IAEzD,MAAM,MAAM,MAAM,MAAM,KAAK;QAAE,OAAO;IAAW;IACjD,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM;IAC7B,OAAO,IAAI,IAAI;AACjB;AAEe,eAAe;IAC5B,MAAM,cAAc,MAAM;IAC1B,MAAM,cAAc,MAAM,IAAI,CAAC,IAAI,IAAI,YAAY,GAAG,CAAC,CAAA,IAAK,EAAE,QAAQ;IAEtE,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAA8B;;;;;;0BAC5C,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAM,WAAU;;sCACf,8OAAC;sCACC,cAAA,8OAAC;gCAAG,WAAU;;kDACZ,8OAAC;wCAAG,WAAU;kDAA0C;;;;;;kDACxD,8OAAC;wCAAG,WAAU;kDAA0C;;;;;;kDACxD,8OAAC;wCAAG,WAAU;kDAA0C;;;;;;kDACxD,8OAAC;wCAAG,WAAU;kDAA0C;;;;;;kDACxD,8OAAC;wCAAG,WAAU;kDAA0C;;;;;;kDACxD,8OAAC;wCAAG,WAAU;kDAA0C;;;;;;kDACxD,8OAAC;wCAAG,WAAU;kDAA0C;;;;;;kDACxD,8OAAC;wCAAG,WAAU;kDAA0C;;;;;;kDACxD,8OAAC;wCAAG,WAAU;kDAA0C;;;;;;kDACxD,8OAAC;wCAAG,WAAU;kDAA0C;;;;;;;;;;;;;;;;;sCAG5D,8OAAC;sCACE,YAAY,GAAG,CAAC,CAAA,kBACf,8OAAC;oCAAoB,WAAU;;sDAC7B,8OAAC;4CAAG,WAAU;sDAAuB,EAAE,QAAQ;;;;;;sDAC/C,8OAAC;4CAAG,WAAU;sDAAuB,EAAE,aAAa;;;;;;sDACpD,8OAAC;4CAAG,WAAU;sDAAuB,EAAE,MAAM,IAAI;;;;;;sDACjD,8OAAC;4CAAG,WAAU;sDACZ,cAAA,8OAAC;gDAAI,WAAU;0DAA2B,EAAE,aAAa;;;;;;;;;;;sDAE3D,8OAAC;4CAAG,WAAU;sDAAuB,EAAE,MAAM;;;;;;sDAC7C,8OAAC;4CAAG,WAAU;sDAAuB,EAAE,WAAW;;;;;;sDAClD,8OAAC;4CAAG,WAAU;sDAAuB,EAAE,UAAU,IAAI;;;;;;sDACrD,8OAAC;4CAAG,WAAU;sDAAuB,IAAI,KAAK,EAAE,SAAS,EAAE,cAAc;;;;;;sDACzE,8OAAC;4CAAG,WAAU;sDACZ,cAAA,8OAAC;gDAAO,cAAc,EAAE,QAAQ;gDAAE,WAAU;0DACzC,YAAY,GAAG,CAAC,CAAA,qBACf,8OAAC;wDAAkB,OAAO;kEAAO;uDAApB;;;;;;;;;;;;;;;sDAInB,8OAAC;4CAAG,WAAU;sDAAuB,EAAE,OAAO;;;;;;;mCAlBvC,EAAE,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BjC","debugId":null}}]
}