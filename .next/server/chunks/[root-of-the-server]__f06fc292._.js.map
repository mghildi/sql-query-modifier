{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CMDHR2804/query-builder/app/api/approve-submission/route.ts"],"sourcesContent":["// app/api/approve-submission/route.ts\r\nimport { google } from 'googleapis';\r\nimport { NextResponse } from 'next/server';\r\nimport { Buffer } from 'buffer';\r\n\r\n// === NEW helper to load the service account ===\r\nfunction loadServiceAccount() {\r\n  const b64 = process.env.GOOGLE_SERVICE_KEY_JSON_B64;\r\n  if (!b64) throw new Error('Missing env var GOOGLE_SERVICE_KEY_JSON_B64');\r\n  const raw = Buffer.from(b64, 'base64').toString('utf8');\r\n  const svc = JSON.parse(raw) as any;\r\n  svc.private_key = svc.private_key.replace(/\\\\n/g, '\\n');\r\n  return svc;\r\n}\r\n\r\nexport async function POST(req: Request) {\r\n  try {\r\n    const { rowIndex, approvedBy } = await req.json();\r\n    const spreadsheetId = '1GwTyj7g0pbqyvwBiWbUXHi_J1qboJ2rryXgCXtpnvLM';\r\n\r\n    // === Use loadServiceAccount instead of keyFile ===\r\n    const svc = loadServiceAccount();\r\n    const auth = new google.auth.GoogleAuth({\r\n      credentials: svc,\r\n      scopes: ['https://www.googleapis.com/auth/spreadsheets'],\r\n    });\r\n    const sheets = google.sheets({ version: 'v4', auth });\r\n\r\n    // Read the row from Submissions\r\n    const sheetName = 'Submissions';\r\n    const rowNum = rowIndex;\r\n    const readRange = `${sheetName}!A${rowNum}:I${rowNum}`;\r\n    const resp = await sheets.spreadsheets.values.get({ spreadsheetId, range: readRange });\r\n    const row = resp.data.values?.[0];\r\n    if (!row) {\r\n      return NextResponse.json({ error: 'Row not found' }, { status: 404 });\r\n    }\r\n\r\n    // Append to Approved\r\n    const approvedValues = [\r\n      row[0], // OriginalQuery\r\n      row[1], // Prompt\r\n      row[2], // ModifiedQuery\r\n      'Approved',\r\n      row[4], // SubmittedBy\r\n      approvedBy,\r\n      new Date().toISOString(),\r\n      row[7], // BankName\r\n      row[8], // Segment\r\n    ];\r\n    await sheets.spreadsheets.values.append({\r\n      spreadsheetId,\r\n      range: 'Approved!A2:I',\r\n      valueInputOption: 'USER_ENTERED',\r\n      requestBody: { values: [approvedValues] },\r\n    });\r\n\r\n    // Delete from Submissions\r\n    const sheetMeta = await sheets.spreadsheets.get({ spreadsheetId });\r\n    const sheetId = sheetMeta.data.sheets!\r\n      .find(s => s.properties!.title === sheetName)!\r\n      .properties!.sheetId!;\r\n    await sheets.spreadsheets.batchUpdate({\r\n      spreadsheetId,\r\n      requestBody: {\r\n        requests: [{\r\n          deleteDimension: {\r\n            range: {\r\n              sheetId,\r\n              dimension: 'ROWS',\r\n              startIndex: rowNum - 1,\r\n              endIndex: rowNum\r\n            }\r\n          }\r\n        }]\r\n      }\r\n    });\r\n\r\n    return NextResponse.json({ success: true });\r\n  } catch (err: any) {\r\n    console.error('Error in approve-submission:', err);\r\n    return NextResponse.json({ error: err.message }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,sCAAsC;;;;AACtC;AACA;AACA;;;;AAEA,iDAAiD;AACjD,SAAS;IACP,MAAM,MAAM,QAAQ,GAAG,CAAC,2BAA2B;IACnD,IAAI,CAAC,KAAK,MAAM,IAAI,MAAM;IAC1B,MAAM,MAAM,qGAAA,CAAA,SAAM,CAAC,IAAI,CAAC,KAAK,UAAU,QAAQ,CAAC;IAChD,MAAM,MAAM,KAAK,KAAK,CAAC;IACvB,IAAI,WAAW,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,QAAQ;IAClD,OAAO;AACT;AAEO,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,GAAG,MAAM,IAAI,IAAI;QAC/C,MAAM,gBAAgB;QAEtB,oDAAoD;QACpD,MAAM,MAAM;QACZ,MAAM,OAAO,IAAI,qJAAA,CAAA,SAAM,CAAC,IAAI,CAAC,UAAU,CAAC;YACtC,aAAa;YACb,QAAQ;gBAAC;aAA+C;QAC1D;QACA,MAAM,SAAS,qJAAA,CAAA,SAAM,CAAC,MAAM,CAAC;YAAE,SAAS;YAAM;QAAK;QAEnD,gCAAgC;QAChC,MAAM,YAAY;QAClB,MAAM,SAAS;QACf,MAAM,YAAY,GAAG,UAAU,EAAE,EAAE,OAAO,EAAE,EAAE,QAAQ;QACtD,MAAM,OAAO,MAAM,OAAO,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC;YAAE;YAAe,OAAO;QAAU;QACpF,MAAM,MAAM,KAAK,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;QACjC,IAAI,CAAC,KAAK;YACR,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAgB,GAAG;gBAAE,QAAQ;YAAI;QACrE;QAEA,qBAAqB;QACrB,MAAM,iBAAiB;YACrB,GAAG,CAAC,EAAE;YACN,GAAG,CAAC,EAAE;YACN,GAAG,CAAC,EAAE;YACN;YACA,GAAG,CAAC,EAAE;YACN;YACA,IAAI,OAAO,WAAW;YACtB,GAAG,CAAC,EAAE;YACN,GAAG,CAAC,EAAE;SACP;QACD,MAAM,OAAO,YAAY,CAAC,MAAM,CAAC,MAAM,CAAC;YACtC;YACA,OAAO;YACP,kBAAkB;YAClB,aAAa;gBAAE,QAAQ;oBAAC;iBAAe;YAAC;QAC1C;QAEA,0BAA0B;QAC1B,MAAM,YAAY,MAAM,OAAO,YAAY,CAAC,GAAG,CAAC;YAAE;QAAc;QAChE,MAAM,UAAU,UAAU,IAAI,CAAC,MAAM,CAClC,IAAI,CAAC,CAAA,IAAK,EAAE,UAAU,CAAE,KAAK,KAAK,WAClC,UAAU,CAAE,OAAO;QACtB,MAAM,OAAO,YAAY,CAAC,WAAW,CAAC;YACpC;YACA,aAAa;gBACX,UAAU;oBAAC;wBACT,iBAAiB;4BACf,OAAO;gCACL;gCACA,WAAW;gCACX,YAAY,SAAS;gCACrB,UAAU;4BACZ;wBACF;oBACF;iBAAE;YACJ;QACF;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAK;IAC3C,EAAE,OAAO,KAAU;QACjB,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO,IAAI,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IACjE;AACF","debugId":null}}]
}