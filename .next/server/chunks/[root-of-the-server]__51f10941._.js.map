{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CMDHR2804/query-builder/app/api/fetch-queries/route.ts"],"sourcesContent":["// File: app/api/fetch-queries/route.ts\r\n\r\nimport { google } from 'googleapis';\r\nimport { NextResponse } from 'next/server';\r\nimport { Buffer } from 'buffer';\r\n\r\n// === Shared helper to decode Base64 JSON creds ===\r\nfunction loadServiceAccount() {\r\n  const b64 = process.env.GOOGLE_SERVICE_KEY_JSON_B64;\r\n  if (!b64) throw new Error('Missing env var GOOGLE_SERVICE_KEY_JSON_B64');\r\n  const raw = Buffer.from(b64, 'base64').toString('utf8');\r\n  const svc = JSON.parse(raw) as any;\r\n  svc.private_key = svc.private_key.replace(/\\\\n/g, '\\n');\r\n  return svc;\r\n}\r\n\r\nexport async function GET(req: Request) {\r\n  try {\r\n    // 1) Authenticate\r\n    const svc  = loadServiceAccount();\r\n    const auth = new google.auth.GoogleAuth({\r\n      credentials: svc,\r\n      scopes: ['https://www.googleapis.com/auth/spreadsheets'],\r\n    });\r\n    const sheets = google.sheets({ version: 'v4', auth });\r\n\r\n    // 2) Parse query params\r\n    const url     = new URL(req.url);\r\n    const bank    = url.searchParams.get('bank')?.trim()   || '';\r\n    const segment = url.searchParams.get('segment')?.trim() || '';\r\n\r\n    // 3) Read Submissions sheet (columns A:I)\r\n    const spreadsheetId = '1GwTyj7g0pbqyvwBiWbUXHi_J1qboJ2rryXgCXtpnvLM';\r\n    const range         = 'Submissions!A2:I';\r\n    const resp          = await sheets.spreadsheets.values.get({ spreadsheetId, range });\r\n    const rows          = resp.data.values || [];\r\n\r\n    // 4) Filter & map\r\n    const filtered = rows\r\n      .filter(r => r[7] === bank && r[8] === segment)\r\n      .map(r => ({\r\n        originalQuery:  r[0] || '',\r\n        prompt:         r[1] || '',\r\n        modifiedQuery:  r[2] || ''\r\n      }));\r\n\r\n    return NextResponse.json(filtered);\r\n  } catch (err: any) {\r\n    console.error('Error fetching queries:', err);\r\n    return NextResponse.json({ error: err.message }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,uCAAuC;;;;AAEvC;AACA;AACA;;;;AAEA,oDAAoD;AACpD,SAAS;IACP,MAAM,MAAM,QAAQ,GAAG,CAAC,2BAA2B;IACnD,IAAI,CAAC,KAAK,MAAM,IAAI,MAAM;IAC1B,MAAM,MAAM,qGAAA,CAAA,SAAM,CAAC,IAAI,CAAC,KAAK,UAAU,QAAQ,CAAC;IAChD,MAAM,MAAM,KAAK,KAAK,CAAC;IACvB,IAAI,WAAW,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,QAAQ;IAClD,OAAO;AACT;AAEO,eAAe,IAAI,GAAY;IACpC,IAAI;QACF,kBAAkB;QAClB,MAAM,MAAO;QACb,MAAM,OAAO,IAAI,qJAAA,CAAA,SAAM,CAAC,IAAI,CAAC,UAAU,CAAC;YACtC,aAAa;YACb,QAAQ;gBAAC;aAA+C;QAC1D;QACA,MAAM,SAAS,qJAAA,CAAA,SAAM,CAAC,MAAM,CAAC;YAAE,SAAS;YAAM;QAAK;QAEnD,wBAAwB;QACxB,MAAM,MAAU,IAAI,IAAI,IAAI,GAAG;QAC/B,MAAM,OAAU,IAAI,YAAY,CAAC,GAAG,CAAC,SAAS,UAAY;QAC1D,MAAM,UAAU,IAAI,YAAY,CAAC,GAAG,CAAC,YAAY,UAAU;QAE3D,0CAA0C;QAC1C,MAAM,gBAAgB;QACtB,MAAM,QAAgB;QACtB,MAAM,OAAgB,MAAM,OAAO,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC;YAAE;YAAe;QAAM;QAClF,MAAM,OAAgB,KAAK,IAAI,CAAC,MAAM,IAAI,EAAE;QAE5C,kBAAkB;QAClB,MAAM,WAAW,KACd,MAAM,CAAC,CAAA,IAAK,CAAC,CAAC,EAAE,KAAK,QAAQ,CAAC,CAAC,EAAE,KAAK,SACtC,GAAG,CAAC,CAAA,IAAK,CAAC;gBACT,eAAgB,CAAC,CAAC,EAAE,IAAI;gBACxB,QAAgB,CAAC,CAAC,EAAE,IAAI;gBACxB,eAAgB,CAAC,CAAC,EAAE,IAAI;YAC1B,CAAC;QAEH,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,KAAU;QACjB,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO,IAAI,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IACjE;AACF","debugId":null}}]
}