{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CMDHR2804/query-builder/app/api/fetch-submissions/route.ts"],"sourcesContent":["// app/api/fetch-submissions/route.ts\r\nimport { google } from 'googleapis'\r\nimport { NextResponse } from 'next/server'\r\n\r\n// Optional: sanity-check on startup\r\nconst B64 = process.env.GOOGLE_SERVICE_KEY_JSON_B64\r\nconsole.log(\r\n  'ðŸ”‘ GOOGLE_SERVICE_KEY_JSON_B64 length:',\r\n  B64?.length,\r\n  'first 10 chars:',\r\n  B64?.slice(0, 10)\r\n)\r\n\r\nfunction loadServiceAccount() {\r\n  if (!B64) {\r\n    throw new Error('Missing env var: GOOGLE_SERVICE_KEY_JSON_B64')\r\n  }\r\n  // 1) Decode from base64 â†’ UTF-8 JSON string\r\n  const raw = Buffer.from(B64, 'base64').toString('utf8')\r\n  // 2) Parse into an object\r\n  const svc = JSON.parse(raw) as {\r\n    private_key: string\r\n    client_email: string\r\n    [key: string]: any\r\n  }\r\n  // 3) No need to replace \\\\n now â€” theyâ€™re real newlines\r\n  return svc\r\n}\r\n\r\nexport async function GET() {\r\n  try {\r\n    const serviceAccount = loadServiceAccount()\r\n\r\n    const auth = new google.auth.GoogleAuth({\r\n      credentials: serviceAccount,\r\n      scopes: ['https://www.googleapis.com/auth/spreadsheets'],\r\n    })\r\n\r\n    const sheets = google.sheets({ version: 'v4', auth })\r\n    const spreadsheetId = '1GwTyj7g0pbqyvwBiWbUXHi_J1qboJ2rryXgCXtpnvLM'\r\n    const range = 'Submissions!A2:I'\r\n    const resp = await sheets.spreadsheets.values.get({ spreadsheetId, range })\r\n    const rows = resp.data.values || []\r\n\r\n    const submissions = rows.map((row, i) => ({\r\n      rowIndex:      i + 2,\r\n      OriginalQuery: row[0] || '',\r\n      Prompt:        row[1] || '',\r\n      ModifiedQuery: row[2] || '',\r\n      Status:        row[3] || '',\r\n      SubmittedBy:   row[4] || '',\r\n      ApprovedBy:    row[5] || '',\r\n      Timestamp:     row[6] || '',\r\n      BankName:      row[7] || '',\r\n      Segment:       row[8] || '',\r\n    }))\r\n\r\n    return NextResponse.json(submissions)\r\n  } catch (e: any) {\r\n    console.error('Error fetching submissions:', e)\r\n    return NextResponse.json({ error: e.message }, { status: 500 })\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,qCAAqC;;;;AACrC;AACA;;;AAEA,oCAAoC;AACpC,MAAM,MAAM,QAAQ,GAAG,CAAC,2BAA2B;AACnD,QAAQ,GAAG,CACT,0CACA,KAAK,QACL,mBACA,KAAK,MAAM,GAAG;AAGhB,SAAS;IACP,IAAI,CAAC,KAAK;QACR,MAAM,IAAI,MAAM;IAClB;IACA,4CAA4C;IAC5C,MAAM,MAAM,OAAO,IAAI,CAAC,KAAK,UAAU,QAAQ,CAAC;IAChD,0BAA0B;IAC1B,MAAM,MAAM,KAAK,KAAK,CAAC;IAKvB,wDAAwD;IACxD,OAAO;AACT;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,iBAAiB;QAEvB,MAAM,OAAO,IAAI,qJAAA,CAAA,SAAM,CAAC,IAAI,CAAC,UAAU,CAAC;YACtC,aAAa;YACb,QAAQ;gBAAC;aAA+C;QAC1D;QAEA,MAAM,SAAS,qJAAA,CAAA,SAAM,CAAC,MAAM,CAAC;YAAE,SAAS;YAAM;QAAK;QACnD,MAAM,gBAAgB;QACtB,MAAM,QAAQ;QACd,MAAM,OAAO,MAAM,OAAO,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC;YAAE;YAAe;QAAM;QACzE,MAAM,OAAO,KAAK,IAAI,CAAC,MAAM,IAAI,EAAE;QAEnC,MAAM,cAAc,KAAK,GAAG,CAAC,CAAC,KAAK,IAAM,CAAC;gBACxC,UAAe,IAAI;gBACnB,eAAe,GAAG,CAAC,EAAE,IAAI;gBACzB,QAAe,GAAG,CAAC,EAAE,IAAI;gBACzB,eAAe,GAAG,CAAC,EAAE,IAAI;gBACzB,QAAe,GAAG,CAAC,EAAE,IAAI;gBACzB,aAAe,GAAG,CAAC,EAAE,IAAI;gBACzB,YAAe,GAAG,CAAC,EAAE,IAAI;gBACzB,WAAe,GAAG,CAAC,EAAE,IAAI;gBACzB,UAAe,GAAG,CAAC,EAAE,IAAI;gBACzB,SAAe,GAAG,CAAC,EAAE,IAAI;YAC3B,CAAC;QAED,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,GAAQ;QACf,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO,EAAE,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IAC/D;AACF","debugId":null}}]
}