{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/CMDHR2804/query-builder/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useRef } from 'react';\nimport DiffMatchPatch from 'diff-match-patch';\nimport { format } from 'sql-formatter';\n\nexport default function Home() {\n  const [queries, setQueries] = useState([]);\n  const [selectedQuery, setSelectedQuery] = useState('');\n  const [customQuery, setCustomQuery] = useState('');\n  const [prompt, setPrompt] = useState('');\n  const [modifiedQuery, setModifiedQuery] = useState('');\n  const [editableQuery, setEditableQuery] = useState('');\n  const [finalDiff, setFinalDiff] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [formatOnly, setFormatOnly] = useState(false);\n  const editBoxRef = useRef(null);\n\n  const [user, setUser] = useState('Mohit');\n  const [customUser, setCustomUser] = useState('');\n  const [bankList, setBankList] = useState([]);\n  const [fullSegmentList, setFullSegmentList] = useState([]);\n  const [filteredSegmentList, setFilteredSegmentList] = useState([]);\n  const [selectedBank, setSelectedBank] = useState('');\n  const [customBank, setCustomBank] = useState('');\n  const [selectedSegment, setSelectedSegment] = useState('');\n  const [customSegment, setCustomSegment] = useState('');\n\n  useEffect(() => {\n    fetch('/api/fetch-bank-segment')\n      .then(res => res.json())\n      .then(data => {\n        setBankList(data.bankNames || []);\n        setFullSegmentList(data.segmentMapping || []);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (selectedBank && selectedBank !== 'Others') {\n      const segments = fullSegmentList\n        .filter(item => item.bank === selectedBank)\n        .map(item => item.segment);\n      setFilteredSegmentList([...new Set(segments)]);\n    } else {\n      setFilteredSegmentList([]);\n    }\n    setSelectedSegment('');\n    setQueries([]);\n  }, [selectedBank, fullSegmentList]);\n\n  useEffect(() => {\n    const bankToSend = selectedBank === 'Others' ? customBank : selectedBank;\n    const segmentToSend = selectedSegment === 'Others' ? customSegment : selectedSegment;\n    if (bankToSend && segmentToSend) {\n      fetch(`/api/fetch-queries?bank=${encodeURIComponent(bankToSend)}&segment=${encodeURIComponent(segmentToSend)}`)\n        .then(res => res.json())\n        .then(data => {\n          if (Array.isArray(data)) {\n            setQueries(data);\n          } else {\n            setQueries([]);\n          }\n        })\n        .catch(err => {\n          console.error('Error fetching filtered queries:', err);\n          setQueries([]);\n        });\n    }\n  }, [selectedBank, selectedSegment, customBank, customSegment]);\n\n  const getBaseQuery = () => customQuery.trim() !== '' ? customQuery : selectedQuery;\n\n  const autoResize = () => {\n    if (editBoxRef.current) {\n      editBoxRef.current.style.height = 'auto';\n      editBoxRef.current.style.height = editBoxRef.current.scrollHeight + 'px';\n    }\n  };\n\n  const handleSendForApproval = async () => {\n    try {\n      const res = await fetch('/api/send-for-approval', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          originalQuery: getBaseQuery(),\n          prompt,\n          modifiedQuery: editableQuery,\n          submittedBy: user === 'Others' ? customUser : user,\n          bank: selectedBank === 'Others' ? customBank : selectedBank,\n          segment: selectedSegment === 'Others' ? customSegment : selectedSegment,\n        }),\n      });\n\n      const result = await res.json();\n      if (result.status === 'submitted') {\n        alert('Query submitted for approval!');\n      } else {\n        alert('Failed to submit!');\n      }\n    } catch (err) {\n      console.error(err);\n      alert('API error submitting for approval');\n    }\n  };\n\n  const handleGenerate = async () => {\n    setLoading(true);\n    setFinalDiff('');\n    const originalQuery = getBaseQuery();\n\n    try {\n      if (formatOnly) {\n        const formatted = format(originalQuery);\n        setModifiedQuery(formatted);\n        setEditableQuery(formatted);\n        return;\n      }\n\n      const res = await fetch('/api/modify-query', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ originalQuery, prompt }),\n      });\n\n      const data = await res.json();\n      const formatted = format(data.modifiedQuery || '');\n      setModifiedQuery(formatted);\n      setEditableQuery(formatted);\n    } catch {\n      setModifiedQuery('Error contacting LLM API');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleFinalSubmit = () => {\n    const original = getBaseQuery();\n    const minifiedNew = minifySQL(editableQuery || '');\n    const minifiedOriginal = minifySQL(original);\n    const diff = highlightDiff(minifiedOriginal, minifiedNew);\n    setFinalDiff(diff);\n  };\n\n  const normalizeSQL = (query) =>\n    query.replace(/\\s+/g, ' ').replace(/[\"“”]/g, \"'\").trim();\n\n  const highlightDiff = (original, modified) => {\n    const dmp = new DiffMatchPatch();\n    const cleanOriginal = normalizeSQL(original);\n    const cleanModified = normalizeSQL(modified);\n    const diff = dmp.diff_main(cleanOriginal, cleanModified);\n    dmp.diff_cleanupSemantic(diff);\n    return diff\n      .map(([type, text]) => {\n        if (type === DiffMatchPatch.DIFF_INSERT) return `<b>${text}</b>`;\n        if (type === DiffMatchPatch.DIFF_DELETE) return `<del>${text}</del>`;\n        return text;\n      })\n      .join('');\n  };\n\n  const minifySQL = (query) =>\n    query.replace(/\\s+/g, ' ').replace(/\\s*\\n\\s*/g, ' ').trim();\n\n  return (\n    <div className=\"p-6 max-w-3xl mx-auto\">\n      <h1 className=\"text-xl font-bold mb-4\">SQL Query Modifier</h1>\n\n      <div className=\"mb-4\">\n        <label className=\"font-semibold\">Select User:</label>\n        <select\n          value={user}\n          onChange={e => setUser(e.target.value)}\n          className=\"w-full p-2 border mb-2\"\n        >\n          <option value=\"Mohit\">Mohit</option>\n          <option value=\"Bhaskar\">Bhaskar</option>\n          <option value=\"Prerna\">Prerna</option>\n          <option value=\"Others\">Others</option>\n        </select>\n        {user === 'Others' && (\n          <input\n            type=\"text\"\n            placeholder=\"Enter your name\"\n            value={customUser}\n            onChange={e => setCustomUser(e.target.value)}\n            className=\"w-full p-2 border\"\n          />\n        )}\n      </div>\n\n      <div className=\"mb-4\">\n        <label className=\"font-semibold\">Select Bank Name:</label>\n        <select\n          value={selectedBank}\n          onChange={e => setSelectedBank(e.target.value)}\n          className=\"w-full p-2 border\"\n        >\n          <option value=\"\">-- Select Bank --</option>\n          {bankList.map((b, i) => <option key={i} value={b}>{b}</option>)}\n          <option value=\"Others\">Others</option>\n        </select>\n        {selectedBank === 'Others' && (\n          <input\n            type=\"text\"\n            placeholder=\"Enter custom bank\"\n            value={customBank}\n            onChange={e => setCustomBank(e.target.value)}\n            className=\"w-full p-2 border mt-2\"\n          />\n        )}\n      </div>\n\n      <div className=\"mb-4\">\n        <label className=\"font-semibold\">Select Segment:</label>\n        <select\n          value={selectedSegment}\n          onChange={e => setSelectedSegment(e.target.value)}\n          className=\"w-full p-2 border\"\n        >\n          <option value=\"\">-- Select Segment --</option>\n          {filteredSegmentList.map((s, i) => <option key={i} value={s}>{s}</option>)}\n          <option value=\"Others\">Others</option>\n        </select>\n        {selectedSegment === 'Others' && (\n          <input\n            type=\"text\"\n            placeholder=\"Enter custom segment\"\n            value={customSegment}\n            onChange={e => setCustomSegment(e.target.value)}\n            className=\"w-full p-2 border mt-2\"\n          />\n        )}\n      </div>\n\n      <label className=\"font-semibold\">Select an approved query:</label>\n      <select\n        onChange={e => setSelectedQuery(e.target.value)}\n        className=\"w-full mb-4 p-2 border\"\n      >\n        <option value=\"\">-- Select Approved Query --</option>\n        {Array.isArray(queries) && queries.length > 0 ? (\n          queries.map((q, i) => (\n            <option key={i} value={q.originalQuery}>{q.originalQuery}</option>\n          ))\n        ) : (\n          <option disabled>No approved queries found</option>\n        )}\n      </select>\n\n      <label className=\"font-semibold\">Or paste your own query:</label>\n      <textarea\n        value={customQuery}\n        onChange={e => setCustomQuery(e.target.value)}\n        placeholder=\"Paste your SQL query here...\"\n        className=\"w-full mb-4 p-2 border h-20\"\n      />\n\n      <label className=\"font-semibold\">Instruction / Prompt:</label>\n      <textarea\n        value={prompt}\n        onChange={e => setPrompt(e.target.value)}\n        placeholder=\"What change do you want to make to the query?\"\n        className=\"w-full mb-4 p-2 border h-20\"\n      />\n\n      <label className=\"flex items-center mb-4\">\n        <input\n          type=\"checkbox\"\n          className=\"mr-2\"\n          checked={formatOnly}\n          onChange={e => setFormatOnly(e.target.checked)}\n        />\n        Only format query without changes\n      </label>\n\n      <button\n        onClick={handleGenerate}\n        disabled={loading}\n        className=\"bg-blue-600 text-white px-4 py-2 rounded\"\n      >\n        {loading ? 'Modifying...' : 'Generate Modified Query'}\n      </button>\n\n      {modifiedQuery && (\n        <div className=\"mt-6\">\n          <h2 className=\"font-bold\">Edit Modified Query</h2>\n          <textarea\n            ref={editBoxRef}\n            value={editableQuery}\n            onChange={e => {\n              setEditableQuery(e.target.value);\n              autoResize();\n            }}\n            className=\"w-full p-2 border mt-2 overflow-hidden resize-none\"\n            onInput={autoResize}\n          />\n          <div className=\"flex gap-4\">\n            <button\n              onClick={handleFinalSubmit}\n              className=\"mt-3 bg-green-600 text-white px-4 py-2 rounded\"\n            >\n              Submit Final\n            </button>\n            <button\n              onClick={handleSendForApproval}\n              className=\"mt-3 bg-yellow-500 text-white px-4 py-2 rounded\"\n            >\n              Send for Approval\n            </button>\n          </div>\n        </div>\n      )}\n\n      {finalDiff && (\n        <div className=\"mt-6\">\n          <h2 className=\"font-bold\">Final Query with Highlighted Changes</h2>\n          <div\n            className=\"bg-gray-100 p-4 rounded whitespace-pre-wrap text-black\"\n            dangerouslySetInnerHTML={{ __html: finalDiff }}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}